---
# Деплою несколько контейнеров приложения

- name: Stop and remove existing Echo-Server containers if they exist
  docker_container:
    name: "{{ app_container_name_prefix }}-{{ item }}"
    state: absent
  with_sequence: start=1 end={{ app_container_count }}
  ignore_errors: true

- name: Pull Echo-Server image
  docker_image:
    name: "{{ app_image }}"
    source: pull
    force_source: yes

- name: Create a network for Echo-Server applications
  docker_network:
    name: echo_network
    state: present

- name: Launch Echo-Server containers
  docker_container:
    name: "{{ app_container_name_prefix }}-{{ item }}"
    image: "{{ app_image }}"
    state: started
    restart_policy: always
    platform: linux/amd64
    networks:
      - name: echo_network
    env:
      AUTHOR: "karmichael228"
    published_ports: [] 
    recreate: true
    healthcheck:
      test: ["CMD-SHELL", "sleep 5 && curl -f http://localhost:8000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  with_sequence: start=1 end={{ app_container_count }}
  register: deployed_containers

- name: Create a list of container IPs for Nginx config
  set_fact:
    echo_server_containers: "{{ echo_server_containers | default([]) + [{'name': item.container.Name, 'ip': item.container.NetworkSettings.Networks.echo_network.IPAddress}] }}"
  with_items: "{{ deployed_containers.results }}"

- name: Debug container IPs
  debug:
    var: echo_server_containers 